<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % version-entities SYSTEM "version.entities">
%version-entities;
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY hash "#">
]>
<refentry id="GstDynamicTypeFactory">
<refmeta>
<refentrytitle role="top_of_page" id="GstDynamicTypeFactory.top_of_page">GstDynamicTypeFactory</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GSTREAMER Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GstDynamicTypeFactory</refname>
<refpurpose>Represents a registered dynamically loadable GType</refpurpose>
</refnamediv>

<refsect1 id="GstDynamicTypeFactory.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_proto_type" colwidth="150px"/>
<colspec colname="functions_proto_name"/>
<tbody>
<row><entry role="function_type"><link linkend="GType"><returnvalue>GType</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-dynamic-type-factory-load">gst_dynamic_type_factory_load</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-dynamic-type-register">gst_dynamic_type_register</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstDynamicTypeFactory.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="other_proto_type" colwidth="150px"/>
<colspec colname="other_proto_name"/>
<tbody>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GstDynamicTypeFactory-struct">GstDynamicTypeFactory</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GstDynamicTypeFactory.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
        <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GstObject">GstObject</link>
            <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GstPluginFeature">GstPluginFeature</link>
                <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GstDynamicTypeFactory
</screen>
</refsect1>

<refsect1 id="GstDynamicTypeFactory.includes"><title>Includes</title><synopsis>#include &lt;gst/gst.h&gt;
</synopsis></refsect1>

<refsect1 id="GstDynamicTypeFactory.description" role="desc">
<title role="desc.title">Description</title>
<para><link linkend="GstDynamicTypeFactory"><type>GstDynamicTypeFactory</type></link> is used to represent a type that can be
automatically loaded the first time it is used. For example,
a non-standard type for use in caps fields.</para>
<para>In general, applications and plugins don't need to use the factory
beyond registering the type in a plugin init function. Once that is
done, the type is stored in the registry, and ready as soon as the
registry is loaded.</para>
<refsect3><title>Registering a type for dynamic loading</title><informalexample><programlisting role="example" language="C"><![CDATA[

static gboolean
plugin_init (GstPlugin * plugin)
{
  return gst_dynamic_type_register (plugin, GST_TYPE_CUSTOM_CAPS_FIELD);
}
]]></programlisting></informalexample>
<para></para>
</refsect3>

</refsect1>
<refsect1 id="GstDynamicTypeFactory.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="gst-dynamic-type-factory-load" role="function">
<title>gst_dynamic_type_factory_load&#160;()</title>
<indexterm zone="gst-dynamic-type-factory-load"><primary>gst_dynamic_type_factory_load</primary></indexterm>
<programlisting language="C"><link linkend="GType"><returnvalue>GType</returnvalue></link>
gst_dynamic_type_factory_load (<parameter>const <link linkend="gchar"><type>gchar</type></link> *factoryname</parameter>);</programlisting>
</refsect2>
<refsect2 id="gst-dynamic-type-register" role="function">
<title>gst_dynamic_type_register&#160;()</title>
<indexterm zone="gst-dynamic-type-register"><primary>gst_dynamic_type_register</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_dynamic_type_register (<parameter><link linkend="GstPlugin"><type>GstPlugin</type></link> *plugin</parameter>,
                           <parameter><link linkend="GType"><type>GType</type></link> type</parameter>);</programlisting>
</refsect2>

</refsect1>
<refsect1 id="GstDynamicTypeFactory.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GstDynamicTypeFactory-struct" role="struct">
<title>GstDynamicTypeFactory</title>
<indexterm zone="GstDynamicTypeFactory-struct"><primary>GstDynamicTypeFactory</primary></indexterm>
<programlisting language="C">typedef struct _GstDynamicTypeFactory GstDynamicTypeFactory;</programlisting>
<para>The opaque <link linkend="GstDynamicTypeFactory"><type>GstDynamicTypeFactory</type></link> data structure.</para>
</refsect2>

</refsect1>
<refsect1 id="GstDynamicTypeFactory.see-also">
<title>See Also</title>
<para><link linkend="GstPlugin"><type>GstPlugin</type></link>, <link linkend="GstPluginFeature"><type>GstPluginFeature</type></link>.</para>

</refsect1>

</refentry>
