<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY % version-entities SYSTEM "version.entities">
%version-entities;
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY hash "#">
]>
<refentry id="gstreamer-libs-GstBitWriter">
<refmeta>
<refentrytitle role="top_of_page" id="gstreamer-libs-GstBitWriter.top_of_page">GstBitWriter</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GSTREAMER-LIBS Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GstBitWriter</refname>
<refpurpose>Writes any number of bits into a memory buffer</refpurpose>
</refnamediv>

<refsect1 id="gstreamer-libs-GstBitWriter.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_proto_type" colwidth="150px"/>
<colspec colname="functions_proto_name"/>
<tbody>
<row><entry role="function_type"><link linkend="GstBitWriter"><returnvalue>GstBitWriter</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-bit-writer-new">gst_bit_writer_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstBitWriter"><returnvalue>GstBitWriter</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-bit-writer-new-with-size">gst_bit_writer_new_with_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstBitWriter"><returnvalue>GstBitWriter</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-bit-writer-new-with-data">gst_bit_writer_new_with_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-free">gst_bit_writer_free</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstBuffer"><returnvalue>GstBuffer</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-bit-writer-free-and-get-buffer">gst_bit_writer_free_and_get_buffer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint8"><returnvalue>guint8</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-bit-writer-free-and-get-data">gst_bit_writer_free_and_get_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-init">gst_bit_writer_init</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-init-with-size">gst_bit_writer_init_with_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-init-with-data">gst_bit_writer_init_with_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-reset">gst_bit_writer_reset</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GstBuffer"><returnvalue>GstBuffer</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-bit-writer-reset-and-get-buffer">gst_bit_writer_reset_and_get_buffer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint8"><returnvalue>guint8</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-bit-writer-reset-and-get-data">gst_bit_writer_reset_and_get_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-set-pos">gst_bit_writer_set_pos</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-get-size">gst_bit_writer_get_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint8"><returnvalue>guint8</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-bit-writer-get-data">gst_bit_writer_get_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-get-remaining">gst_bit_writer_get_remaining</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-get-size-unchecked">gst_bit_writer_get_size_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint8"><returnvalue>guint8</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="gst-bit-writer-get-data-unchecked">gst_bit_writer_get_data_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-set-pos-unchecked">gst_bit_writer_set_pos_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-get-remaining-unchecked">gst_bit_writer_get_remaining_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-put-bits-uint16">gst_bit_writer_put_bits_uint16</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-put-bits-uint32">gst_bit_writer_put_bits_uint32</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-put-bits-uint64">gst_bit_writer_put_bits_uint64</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-put-bits-uint8">gst_bit_writer_put_bits_uint8</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-put-bytes">gst_bit_writer_put_bytes</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-put-bits-uint16-unchecked">gst_bit_writer_put_bits_uint16_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-put-bits-uint32-unchecked">gst_bit_writer_put_bits_uint32_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-put-bits-uint64-unchecked">gst_bit_writer_put_bits_uint64_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-put-bits-uint8-unchecked">gst_bit_writer_put_bits_uint8_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-put-bytes-unchecked">gst_bit_writer_put_bytes_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-align-bytes">gst_bit_writer_align_bytes</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="gst-bit-writer-align-bytes-unchecked">gst_bit_writer_align_bytes_unchecked</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="gstreamer-libs-GstBitWriter.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="other_proto_type" colwidth="150px"/>
<colspec colname="other_proto_name"/>
<tbody>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GstBitWriter">GstBitWriter</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>

<refsect1 id="gstreamer-libs-GstBitWriter.includes"><title>Includes</title><synopsis>#include &lt;gst/base/base.h&gt;
</synopsis></refsect1>

<refsect1 id="gstreamer-libs-GstBitWriter.description" role="desc">
<title role="desc.title">Description</title>
<para><link linkend="GstBitWriter"><type>GstBitWriter</type></link> provides a bit writer that can write any number of
bits into a memory buffer. It provides functions for writing any
number of bits into 8, 16, 32 and 64 bit variables.</para>

</refsect1>
<refsect1 id="gstreamer-libs-GstBitWriter.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="gst-bit-writer-new" role="function">
<title>gst_bit_writer_new&#160;()</title>
<indexterm zone="gst-bit-writer-new"><primary>gst_bit_writer_new</primary></indexterm>
<programlisting language="C"><link linkend="GstBitWriter"><returnvalue>GstBitWriter</returnvalue></link>&#160;*
gst_bit_writer_new (<parameter><type>void</type></parameter>);</programlisting>
<para>Creates a new, empty <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance.</para>
<para>Free-function: gst_bit_writer_free</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-bit-writer-new.returns" role="returns">
<title>Returns</title>
<para>a new, empty <link linkend="GstByteWriter"><type>GstByteWriter</type></link> instance. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-new-with-size" role="function">
<title>gst_bit_writer_new_with_size&#160;()</title>
<indexterm zone="gst-bit-writer-new-with-size"><primary>gst_bit_writer_new_with_size</primary></indexterm>
<programlisting language="C"><link linkend="GstBitWriter"><returnvalue>GstBitWriter</returnvalue></link>&#160;*
gst_bit_writer_new_with_size (<parameter><link linkend="guint32"><type>guint32</type></link> size</parameter>,
                              <parameter><link linkend="gboolean"><type>gboolean</type></link> fixed</parameter>);</programlisting>
<para>Creates a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance with the given initial data size.</para>
<para>Free-function: gst_bit_writer_free</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-bit-writer-new-with-size.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>Initial size of data in bytes</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>fixed</para></entry>
<entry role="parameter_description"><para>If <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> the data can't be reallocated</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-bit-writer-new-with-size.returns" role="returns">
<title>Returns</title>
<para>a new <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-new-with-data" role="function">
<title>gst_bit_writer_new_with_data&#160;()</title>
<indexterm zone="gst-bit-writer-new-with-data"><primary>gst_bit_writer_new_with_data</primary></indexterm>
<programlisting language="C"><link linkend="GstBitWriter"><returnvalue>GstBitWriter</returnvalue></link>&#160;*
gst_bit_writer_new_with_data (<parameter><link linkend="guint8"><type>guint8</type></link> *data</parameter>,
                              <parameter><link linkend="guint"><type>guint</type></link> size</parameter>,
                              <parameter><link linkend="gboolean"><type>gboolean</type></link> initialized</parameter>);</programlisting>
<para>Creates a new <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance with the given memory area. If
<parameter>initialized</parameter>
 is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> it is possible to read <parameter>size</parameter>
 bits from the
<link linkend="GstBitWriter"><type>GstBitWriter</type></link> from the beginnig.</para>
<para>Free-function: gst_bit_writer_free</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-bit-writer-new-with-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>Memory area for writing</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>Size of <parameter>data</parameter>
in bytes</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>initialized</para></entry>
<entry role="parameter_description"><para>if <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> the complete data can be read from the beginning</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-bit-writer-new-with-data.returns" role="returns">
<title>Returns</title>
<para>a new <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-free" role="function">
<title>gst_bit_writer_free&#160;()</title>
<indexterm zone="gst-bit-writer-free"><primary>gst_bit_writer_free</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_bit_writer_free (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>);</programlisting>
<para>Frees <parameter>bitwriter</parameter>
 and the allocated data inside.</para>
<refsect3 id="gst-bit-writer-free.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para><link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>in</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-free-and-get-buffer" role="function">
<title>gst_bit_writer_free_and_get_buffer&#160;()</title>
<indexterm zone="gst-bit-writer-free-and-get-buffer"><primary>gst_bit_writer_free_and_get_buffer</primary></indexterm>
<programlisting language="C"><link linkend="GstBuffer"><returnvalue>GstBuffer</returnvalue></link>&#160;*
gst_bit_writer_free_and_get_buffer (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>);</programlisting>
<para>Frees <parameter>bitwriter</parameter>
 without destroying the internal data, which is
returned as <link linkend="GstBuffer"><type>GstBuffer</type></link>.</para>
<para>Free-function: gst_buffer_unref</para>
<refsect3 id="gst-bit-writer-free-and-get-buffer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para><link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>in</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-bit-writer-free-and-get-buffer.returns" role="returns">
<title>Returns</title>
<para>a new allocated <link linkend="GstBuffer"><type>GstBuffer</type></link> wrapping the
data inside. <link linkend="gst-buffer-unref"><function>gst_buffer_unref()</function></link> after usage. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-free-and-get-data" role="function">
<title>gst_bit_writer_free_and_get_data&#160;()</title>
<indexterm zone="gst-bit-writer-free-and-get-data"><primary>gst_bit_writer_free_and_get_data</primary></indexterm>
<programlisting language="C"><link linkend="guint8"><returnvalue>guint8</returnvalue></link>&#160;*
gst_bit_writer_free_and_get_data (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>);</programlisting>
<para>Frees <parameter>bitwriter</parameter>
 without destroying the internal data, which is
returned.</para>
<para>Free-function: g_free</para>
<refsect3 id="gst-bit-writer-free-and-get-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para><link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>in</acronym>][<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-bit-writer-free-and-get-data.returns" role="returns">
<title>Returns</title>
<para>the current data. <link linkend="g-free"><function>g_free()</function></link> after
usage. </para>
<para><emphasis role="annotation">[<acronym>array</acronym>][<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-init" role="function">
<title>gst_bit_writer_init&#160;()</title>
<indexterm zone="gst-bit-writer-init"><primary>gst_bit_writer_init</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_bit_writer_init (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>);</programlisting>
<para>Initializes <parameter>bitwriter</parameter>
 to an empty instance.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-bit-writer-init.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para><link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-init-with-size" role="function">
<title>gst_bit_writer_init_with_size&#160;()</title>
<indexterm zone="gst-bit-writer-init-with-size"><primary>gst_bit_writer_init_with_size</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_bit_writer_init_with_size (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>,
                               <parameter><link linkend="guint32"><type>guint32</type></link> size</parameter>,
                               <parameter><link linkend="gboolean"><type>gboolean</type></link> fixed</parameter>);</programlisting>
<para>Initializes a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance and allocates the given data
<parameter>size</parameter>
.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-bit-writer-init-with-size.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para><link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>the size on bytes to allocate for data</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>fixed</para></entry>
<entry role="parameter_description"><para>If <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> the data can't be reallocated</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-init-with-data" role="function">
<title>gst_bit_writer_init_with_data&#160;()</title>
<indexterm zone="gst-bit-writer-init-with-data"><primary>gst_bit_writer_init_with_data</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_bit_writer_init_with_data (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>,
                               <parameter><link linkend="guint8"><type>guint8</type></link> *data</parameter>,
                               <parameter><link linkend="guint"><type>guint</type></link> size</parameter>,
                               <parameter><link linkend="gboolean"><type>gboolean</type></link> initialized</parameter>);</programlisting>
<para>Initializes <parameter>bitwriter</parameter>
 with the given memory area <parameter>data</parameter>
. IF
<parameter>initialized</parameter>
 is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> it is possible to read <parameter>size</parameter>
 bits from the
<link linkend="GstBitWriter"><type>GstBitWriter</type></link> from the beginning.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="gst-bit-writer-init-with-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para><link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>Memory area for writing. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym> length=size][<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>Size of <parameter>data</parameter>
in bytes</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>initialized</para></entry>
<entry role="parameter_description"><para>If <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> the complete data can be read from the beginning</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-reset" role="function">
<title>gst_bit_writer_reset&#160;()</title>
<indexterm zone="gst-bit-writer-reset"><primary>gst_bit_writer_reset</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_bit_writer_reset (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>);</programlisting>
<para>Resets <parameter>bitwriter</parameter>
 and frees the data if it's owned by <parameter>bitwriter</parameter>
.</para>
<refsect3 id="gst-bit-writer-reset.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para><link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-reset-and-get-buffer" role="function">
<title>gst_bit_writer_reset_and_get_buffer&#160;()</title>
<indexterm zone="gst-bit-writer-reset-and-get-buffer"><primary>gst_bit_writer_reset_and_get_buffer</primary></indexterm>
<programlisting language="C"><link linkend="GstBuffer"><returnvalue>GstBuffer</returnvalue></link>&#160;*
gst_bit_writer_reset_and_get_buffer (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>);</programlisting>
<para>Resets <parameter>bitwriter</parameter>
 and returns the current data as <link linkend="GstBuffer"><type>GstBuffer</type></link>.</para>
<para>Free-function: gst_buffer_unref</para>
<refsect3 id="gst-bit-writer-reset-and-get-buffer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-bit-writer-reset-and-get-buffer.returns" role="returns">
<title>Returns</title>
<para>a new allocated <link linkend="GstBuffer"><type>GstBuffer</type></link> wrapping the
current data. <link linkend="gst-buffer-unref"><function>gst_buffer_unref()</function></link> after usage. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-reset-and-get-data" role="function">
<title>gst_bit_writer_reset_and_get_data&#160;()</title>
<indexterm zone="gst-bit-writer-reset-and-get-data"><primary>gst_bit_writer_reset_and_get_data</primary></indexterm>
<programlisting language="C"><link linkend="guint8"><returnvalue>guint8</returnvalue></link>&#160;*
gst_bit_writer_reset_and_get_data (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>);</programlisting>
<para>Resets <parameter>bitwriter</parameter>
 and returns the current data.</para>
<para>Free-function: g_free</para>
<refsect3 id="gst-bit-writer-reset-and-get-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-bit-writer-reset-and-get-data.returns" role="returns">
<title>Returns</title>
<para>the current data. <link linkend="g-free"><function>g_free()</function></link> after
usage. </para>
<para><emphasis role="annotation">[<acronym>array</acronym>][<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-set-pos" role="function">
<title>gst_bit_writer_set_pos&#160;()</title>
<indexterm zone="gst-bit-writer-set-pos"><primary>gst_bit_writer_set_pos</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_bit_writer_set_pos (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>,
                        <parameter><link linkend="guint"><type>guint</type></link> pos</parameter>);</programlisting>
</refsect2>
<refsect2 id="gst-bit-writer-get-size" role="function">
<title>gst_bit_writer_get_size&#160;()</title>
<indexterm zone="gst-bit-writer-get-size"><primary>gst_bit_writer_get_size</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_bit_writer_get_size (<parameter>const <link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>);</programlisting>
<para>Get size of written <parameter>data</parameter>
</para>
<refsect3 id="gst-bit-writer-get-size.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-bit-writer-get-size.returns" role="returns">
<title>Returns</title>
<para> size of bits written in <parameter>data</parameter>
</para>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-get-data" role="function">
<title>gst_bit_writer_get_data&#160;()</title>
<indexterm zone="gst-bit-writer-get-data"><primary>gst_bit_writer_get_data</primary></indexterm>
<programlisting language="C"><link linkend="guint8"><returnvalue>guint8</returnvalue></link>&#160;*
gst_bit_writer_get_data (<parameter>const <link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>);</programlisting>
<para>Get written data pointer</para>
<refsect3 id="gst-bit-writer-get-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-bit-writer-get-data.returns" role="returns">
<title>Returns</title>
<para> data pointer</para>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-get-remaining" role="function">
<title>gst_bit_writer_get_remaining&#160;()</title>
<indexterm zone="gst-bit-writer-get-remaining"><primary>gst_bit_writer_get_remaining</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_bit_writer_get_remaining (<parameter>const <link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>);</programlisting>
</refsect2>
<refsect2 id="gst-bit-writer-get-size-unchecked" role="function">
<title>gst_bit_writer_get_size_unchecked&#160;()</title>
<indexterm zone="gst-bit-writer-get-size-unchecked"><primary>gst_bit_writer_get_size_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_bit_writer_get_size_unchecked (<parameter>const <link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>);</programlisting>
</refsect2>
<refsect2 id="gst-bit-writer-get-data-unchecked" role="function">
<title>gst_bit_writer_get_data_unchecked&#160;()</title>
<indexterm zone="gst-bit-writer-get-data-unchecked"><primary>gst_bit_writer_get_data_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint8"><returnvalue>guint8</returnvalue></link>&#160;*
gst_bit_writer_get_data_unchecked (<parameter>const <link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>);</programlisting>
</refsect2>
<refsect2 id="gst-bit-writer-set-pos-unchecked" role="function">
<title>gst_bit_writer_set_pos_unchecked&#160;()</title>
<indexterm zone="gst-bit-writer-set-pos-unchecked"><primary>gst_bit_writer_set_pos_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_bit_writer_set_pos_unchecked (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>,
                                  <parameter><link linkend="guint"><type>guint</type></link> pos</parameter>);</programlisting>
</refsect2>
<refsect2 id="gst-bit-writer-get-remaining-unchecked" role="function">
<title>gst_bit_writer_get_remaining_unchecked&#160;()</title>
<indexterm zone="gst-bit-writer-get-remaining-unchecked"><primary>gst_bit_writer_get_remaining_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
gst_bit_writer_get_remaining_unchecked
                               (<parameter>const <link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>);</programlisting>
</refsect2>
<refsect2 id="gst-bit-writer-put-bits-uint16" role="function">
<title>gst_bit_writer_put_bits_uint16&#160;()</title>
<indexterm zone="gst-bit-writer-put-bits-uint16"><primary>gst_bit_writer_put_bits_uint16</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_bit_writer_put_bits_uint16 (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>,
                                <parameter><link linkend="guint16"><type>guint16</type></link> value</parameter>,
                                <parameter><link linkend="guint"><type>guint</type></link> nbits</parameter>);</programlisting>
<para>Write <parameter>nbits</parameter>
 bits of <parameter>value</parameter>
 to <link linkend="GstBitWriter"><type>GstBitWriter</type></link>.</para>
<refsect3 id="gst-bit-writer-put-bits-uint16.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>value of <link linkend="guint16"><type>guint16</type></link> to write</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>nbits</para></entry>
<entry role="parameter_description"><para>number of bits to write</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-bit-writer-put-bits-uint16.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-put-bits-uint32" role="function">
<title>gst_bit_writer_put_bits_uint32&#160;()</title>
<indexterm zone="gst-bit-writer-put-bits-uint32"><primary>gst_bit_writer_put_bits_uint32</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_bit_writer_put_bits_uint32 (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>,
                                <parameter><link linkend="guint32"><type>guint32</type></link> value</parameter>,
                                <parameter><link linkend="guint"><type>guint</type></link> nbits</parameter>);</programlisting>
<para>Write <parameter>nbits</parameter>
 bits of <parameter>value</parameter>
 to <link linkend="GstBitWriter"><type>GstBitWriter</type></link>.</para>
<refsect3 id="gst-bit-writer-put-bits-uint32.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>value of <link linkend="guint32"><type>guint32</type></link> to write</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>nbits</para></entry>
<entry role="parameter_description"><para>number of bits to write</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-bit-writer-put-bits-uint32.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-put-bits-uint64" role="function">
<title>gst_bit_writer_put_bits_uint64&#160;()</title>
<indexterm zone="gst-bit-writer-put-bits-uint64"><primary>gst_bit_writer_put_bits_uint64</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_bit_writer_put_bits_uint64 (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>,
                                <parameter><link linkend="guint64"><type>guint64</type></link> value</parameter>,
                                <parameter><link linkend="guint"><type>guint</type></link> nbits</parameter>);</programlisting>
<para>Write <parameter>nbits</parameter>
 bits of <parameter>value</parameter>
 to <link linkend="GstBitWriter"><type>GstBitWriter</type></link>.</para>
<refsect3 id="gst-bit-writer-put-bits-uint64.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>value of <link linkend="guint64"><type>guint64</type></link> to write</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>nbits</para></entry>
<entry role="parameter_description"><para>number of bits to write</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-bit-writer-put-bits-uint64.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-put-bits-uint8" role="function">
<title>gst_bit_writer_put_bits_uint8&#160;()</title>
<indexterm zone="gst-bit-writer-put-bits-uint8"><primary>gst_bit_writer_put_bits_uint8</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_bit_writer_put_bits_uint8 (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>,
                               <parameter><link linkend="guint8"><type>guint8</type></link> value</parameter>,
                               <parameter><link linkend="guint"><type>guint</type></link> nbits</parameter>);</programlisting>
<para>Write <parameter>nbits</parameter>
 bits of <parameter>value</parameter>
 to <link linkend="GstBitWriter"><type>GstBitWriter</type></link>.</para>
<refsect3 id="gst-bit-writer-put-bits-uint8.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>value of <link linkend="guint8"><type>guint8</type></link> to write</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>nbits</para></entry>
<entry role="parameter_description"><para>number of bits to write</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-bit-writer-put-bits-uint8.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-put-bytes" role="function">
<title>gst_bit_writer_put_bytes&#160;()</title>
<indexterm zone="gst-bit-writer-put-bytes"><primary>gst_bit_writer_put_bytes</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_bit_writer_put_bytes (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>,
                          <parameter>const <link linkend="guint8"><type>guint8</type></link> *data</parameter>,
                          <parameter><link linkend="guint"><type>guint</type></link> nbytes</parameter>);</programlisting>
<para>Write <parameter>nbytes</parameter>
 bytes of <parameter>data</parameter>
 to <link linkend="GstBitWriter"><type>GstBitWriter</type></link>.</para>
<refsect3 id="gst-bit-writer-put-bytes.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>pointer of data to write</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>nbytes</para></entry>
<entry role="parameter_description"><para>number of bytes to write</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-bit-writer-put-bytes.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-put-bits-uint16-unchecked" role="function">
<title>gst_bit_writer_put_bits_uint16_unchecked&#160;()</title>
<indexterm zone="gst-bit-writer-put-bits-uint16-unchecked"><primary>gst_bit_writer_put_bits_uint16_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_bit_writer_put_bits_uint16_unchecked
                               (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>,
                                <parameter><link linkend="guint16"><type>guint16</type></link> value</parameter>,
                                <parameter><link linkend="guint"><type>guint</type></link> nbits</parameter>);</programlisting>
<para>Write <parameter>nbits</parameter>
 bits of <parameter>value</parameter>
 to <link linkend="GstBitWriter"><type>GstBitWriter</type></link> without checking whether
there is enough space</para>
<refsect3 id="gst-bit-writer-put-bits-uint16-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>value of <link linkend="guint16"><type>guint16</type></link> to write</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>nbits</para></entry>
<entry role="parameter_description"><para>number of bits to write</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-put-bits-uint32-unchecked" role="function">
<title>gst_bit_writer_put_bits_uint32_unchecked&#160;()</title>
<indexterm zone="gst-bit-writer-put-bits-uint32-unchecked"><primary>gst_bit_writer_put_bits_uint32_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_bit_writer_put_bits_uint32_unchecked
                               (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>,
                                <parameter><link linkend="guint32"><type>guint32</type></link> value</parameter>,
                                <parameter><link linkend="guint"><type>guint</type></link> nbits</parameter>);</programlisting>
<para>Write <parameter>nbits</parameter>
 bits of <parameter>value</parameter>
 to <link linkend="GstBitWriter"><type>GstBitWriter</type></link> without checking whether
there is enough space</para>
<refsect3 id="gst-bit-writer-put-bits-uint32-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>value of <link linkend="guint32"><type>guint32</type></link> to write</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>nbits</para></entry>
<entry role="parameter_description"><para>number of bits to write</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-put-bits-uint64-unchecked" role="function">
<title>gst_bit_writer_put_bits_uint64_unchecked&#160;()</title>
<indexterm zone="gst-bit-writer-put-bits-uint64-unchecked"><primary>gst_bit_writer_put_bits_uint64_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_bit_writer_put_bits_uint64_unchecked
                               (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>,
                                <parameter><link linkend="guint64"><type>guint64</type></link> value</parameter>,
                                <parameter><link linkend="guint"><type>guint</type></link> nbits</parameter>);</programlisting>
<para>Write <parameter>nbits</parameter>
 bits of <parameter>value</parameter>
 to <link linkend="GstBitWriter"><type>GstBitWriter</type></link> without checking whether
there is enough space</para>
<refsect3 id="gst-bit-writer-put-bits-uint64-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>value of <link linkend="guint64"><type>guint64</type></link> to write</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>nbits</para></entry>
<entry role="parameter_description"><para>number of bits to write</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-put-bits-uint8-unchecked" role="function">
<title>gst_bit_writer_put_bits_uint8_unchecked&#160;()</title>
<indexterm zone="gst-bit-writer-put-bits-uint8-unchecked"><primary>gst_bit_writer_put_bits_uint8_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_bit_writer_put_bits_uint8_unchecked
                               (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>,
                                <parameter><link linkend="guint8"><type>guint8</type></link> value</parameter>,
                                <parameter><link linkend="guint"><type>guint</type></link> nbits</parameter>);</programlisting>
<para>Write <parameter>nbits</parameter>
 bits of <parameter>value</parameter>
 to <link linkend="GstBitWriter"><type>GstBitWriter</type></link> without checking whether
there is enough space</para>
<refsect3 id="gst-bit-writer-put-bits-uint8-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>value of <link linkend="guint8"><type>guint8</type></link> to write</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>nbits</para></entry>
<entry role="parameter_description"><para>number of bits to write</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-put-bytes-unchecked" role="function">
<title>gst_bit_writer_put_bytes_unchecked&#160;()</title>
<indexterm zone="gst-bit-writer-put-bytes-unchecked"><primary>gst_bit_writer_put_bytes_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_bit_writer_put_bytes_unchecked (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>,
                                    <parameter>const <link linkend="guint8"><type>guint8</type></link> *data</parameter>,
                                    <parameter><link linkend="guint"><type>guint</type></link> nbytes</parameter>);</programlisting>
<para>Write <parameter>nbytes</parameter>
 bytes of <parameter>data</parameter>
 to <link linkend="GstBitWriter"><type>GstBitWriter</type></link> without checking whether
there is enough space</para>
<refsect3 id="gst-bit-writer-put-bytes-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>pointer of data to write</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>nbytes</para></entry>
<entry role="parameter_description"><para>number of bytes to write</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-align-bytes" role="function">
<title>gst_bit_writer_align_bytes&#160;()</title>
<indexterm zone="gst-bit-writer-align-bytes"><primary>gst_bit_writer_align_bytes</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
gst_bit_writer_align_bytes (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>,
                            <parameter><link linkend="guint8"><type>guint8</type></link> trailing_bit</parameter>);</programlisting>
<para>Write trailing bit to align last byte of <parameter>data</parameter>
. <parameter>trailing_bit</parameter>
 can
only be 1 or 0.</para>
<refsect3 id="gst-bit-writer-align-bytes.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>trailing_bit</para></entry>
<entry role="parameter_description"><para>trailing bits of last byte, 0 or 1</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="gst-bit-writer-align-bytes.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="gst-bit-writer-align-bytes-unchecked" role="function">
<title>gst_bit_writer_align_bytes_unchecked&#160;()</title>
<indexterm zone="gst-bit-writer-align-bytes-unchecked"><primary>gst_bit_writer_align_bytes_unchecked</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
gst_bit_writer_align_bytes_unchecked (<parameter><link linkend="GstBitWriter"><type>GstBitWriter</type></link> *bitwriter</parameter>,
                                      <parameter><link linkend="guint8"><type>guint8</type></link> trailing_bit</parameter>);</programlisting>
<para>Write trailing bit to align last byte of <parameter>data</parameter>
 without checking whether there
is enough space</para>
<refsect3 id="gst-bit-writer-align-bytes-unchecked.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bitwriter</para></entry>
<entry role="parameter_description"><para>a <link linkend="GstBitWriter"><type>GstBitWriter</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>trailing_bit</para></entry>
<entry role="parameter_description"><para>trailing bits of last byte, 0 or 1</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>
<refsect1 id="gstreamer-libs-GstBitWriter.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GstBitWriter" role="struct" condition="since:1.16">
<title>struct GstBitWriter</title>
<indexterm zone="GstBitWriter" role="1.16"><primary>GstBitWriter</primary></indexterm>
<programlisting language="C">struct GstBitWriter {
  guint8 *data;
  guint bit_size;
};
</programlisting>
<para>A bit writer instance.</para>
<refsect3 id="GstBitWriter.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><link linkend="guint8"><type>guint8</type></link>&#160;*<structfield id="GstBitWriter.data">data</structfield>;</para></entry>
<entry role="struct_member_description"><para>Allocated <parameter>data</parameter>
for bit writer to write</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="guint"><type>guint</type></link>&#160;<structfield id="GstBitWriter.bit-size">bit_size</structfield>;</para></entry>
<entry role="struct_member_description"><para>Size of written <parameter>data</parameter>
in bits</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
<para role="since">Since: <link linkend="api-index-1.16">1.16</link></para></refsect2>

</refsect1>

</refentry>
